package main

import (
  "context"
  "database/sql"
  "log/slog"
  "os"
  "gorm.io/gorm"

  "github.com/alexisvisco/goframe/cli/commands/rootcmd"
  {{ .imports }}
)

var (
  exitOK    = 0
  exitError = 1
)

func main() {
  os.Exit(run())
}

func run() int {
  ctx, ctxCancel := context.WithCancel(context.Background())
  defer ctxCancel()

  cfg, err := config.LoadConfig()
  if err != nil {
    slog.Error("failed to load configuration", "error", err)
    return exitError
  }

	connector := func() (*gorm.DB, error) {
    gdb, _, err := provide.DB(false)(cfg)
    if err != nil {
      return nil, err
    }
		return gdb, nil
  }

  cmdRoot := rootcmd.NewCmdRoot(
    rootcmd.WithMigrations(db.Migrations),
    rootcmd.WithDB(connector),
    rootcmd.WithConfig(cfg),
    rootcmd.WithFxOptions(app.Module(cfg)...),
  )
  if _, err := cmdRoot.ExecuteContextC(ctx); err != nil {
		slog.Error("error", "error", err)
    switch {
    default:
      return exitError
    }
  }

  return exitOK
}
