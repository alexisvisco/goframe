package workflow

import (
  {{ .imports }}
)

type SendEmailWorkflow struct {
  Activity *activity.SendEmailActivity
}

type SendEmailWorkflowParams struct {
  fx.In
  Activity *activity.SendEmailActivity
}

func NewSendEmailWorkflow(p SendEmailWorkflowParams) *SendEmailWorkflow {
  return &SendEmailWorkflow{Activity: p.Activity}
}

func (w *SendEmailWorkflow) SendEmail(ctx workflow.Context, p mail.Message) error {
  opts := workflow.ActivityOptions{
    StartToCloseTimeout: time.Minute,
    RetryPolicy:         &temporal.RetryPolicy{MaximumAttempts: 3},
  }
  ctx = workflow.WithActivityOptions(ctx, opts)
  return workflow.ExecuteActivity(ctx, w.Activity.SendEmail, p).Get(ctx, nil)
}
