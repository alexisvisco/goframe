{{- if .new_file}}
package {{ .pkgname }}

import (
  "net/http"
  "github.com/alexisvisco/goframe/http/httpx"
  "github.com/alexisvisco/goframe/http/params"
  {{.imports}}
)
{{- end }}

type {{ .route_name_pascal }}Request struct {
{{- if .request_body }}
  {{ .request_body }}
{{- end }}
}

type {{ .route_name_pascal }}Response struct {
{{- if .response_body }}
  {{ .response_body }}
{{- end }}
}

// goframe:http_route path={{ .path }} method={{ .method }}
func (h *{{ .handler_pascal }}Handler) {{ .route_name_pascal }}() http.HandlerFunc {
  {{- if .nomiddleware }}
  return httpx.Wrap(func(r *http.Request) (httpx.Response, error) {
  {{- else }}
  return httpx.Chain(

  )(func(r *http.Request) (httpx.Response, error) {
  {{- end }}
    var req {{ .route_name_pascal }}Request
    if err := params.Bind(&req, r); err != nil {
      return nil, err
    }

    {{- if .route_body }}
    {{.route_body}}
    {{- end }}

    {{- if .route_response }}
    {{.route_response}}
    {{- else }}
    return httpx.JSON.Ok({{ .route_name_pascal }}Response{

    }), nil
    {{- end }}
  })
}
