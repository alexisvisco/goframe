name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - "docs/**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "docs/package-lock.json"

      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"
          echo "Available memory: $(free -h)"
          echo "Disk space: $(df -h)"

      - name: Install dependencies
        working-directory: ./docs
        run: |
          echo "Installing dependencies..."
          npm ci --verbose
          echo "Dependencies installed successfully"

      - name: Build documentation with verbose logging
        working-directory: ./docs
        run: |
          echo "Starting Next.js build..."
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          echo "Package.json content:"
          cat package.json
          echo "Next config:"
          cat next.config.js
          echo "Running build command with debug..."
          DEBUG=* npm run build 2>&1 | tee build.log || {
            echo "Build failed! Exit code: $?"
            echo "Last 50 lines of build output:"
            tail -50 build.log
            echo "Full build log:"
            cat build.log
            exit 1
          }
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
          CI: true

      - name: Check build output
        working-directory: ./docs
        run: |
          echo "Build completed successfully"
          echo "Checking out directory:"
          ls -la out/ || echo "No out directory found"
          echo "Build artifacts:"
          find . -name "*.log" -exec echo "Log file: {}" \; -exec cat {} \;

      - name: Run postbuild (pagefind)
        working-directory: ./docs
        run: |
          echo "Running pagefind..."
          npm run postbuild --verbose
          echo "Pagefind completed"
          echo "Checking pagefind output:"
          ls -la out/_pagefind/ || echo "No pagefind directory found"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs/out"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
