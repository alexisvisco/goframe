name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main
    paths:
      - .github/workflows/deploy-docs.yml
      - "docs/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "docs/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Build with Next.js
        run: npm run build
        env:
          PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run postbuild (pagefind)
        run: npm run postbuild

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
